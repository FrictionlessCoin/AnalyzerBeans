//
//
/**
 * eobjects.org AnalyzerBeans
 * Copyright (C) 2010 eobjects.org
 *
 * This copyrighted material is made available to anyone wishing to use, modify,
 * copy, or redistribute it subject to the terms and conditions of the GNU
 * Lesser General Public License, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this distribution; if not, write to:
 * Free Software Foundation, Inc.
 * 51 Franklin Street, Fifth Floor
 * Boston, MA  02110-1301  USA
 */
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.06 at 04:24:16 PM CET 
//
package org.eobjects.analyzer.job.jaxb;

import javax.xml.bind.annotation.XmlRegistry;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the org.eobjects.analyzer.job.jaxb package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

	/**
	 * Create a new ObjectFactory that can be used to create new instances of
	 * schema derived classes for package: org.eobjects.analyzer.job.jaxb
	 * 
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link JobMetadataType }
	 * 
	 */
	public JobMetadataType createJobMetadataType() {
		return new JobMetadataType();
	}

	/**
	 * Create an instance of {@link MergedOutcomeType.Outcome }
	 * 
	 */
	public MergedOutcomeType.Outcome createMergedOutcomeTypeOutcome() {
		return new MergedOutcomeType.Outcome();
	}

	/**
	 * Create an instance of {@link TransformationType }
	 * 
	 */
	public TransformationType createTransformationType() {
		return new TransformationType();
	}

	/**
	 * Create an instance of {@link DataContextType }
	 * 
	 */
	public DataContextType createDataContextType() {
		return new DataContextType();
	}

	/**
	 * Create an instance of {@link AnalysisType }
	 * 
	 */
	public AnalysisType createAnalysisType() {
		return new AnalysisType();
	}

	/**
	 * Create an instance of {@link ConfiguredPropertiesType.Property }
	 * 
	 */
	public ConfiguredPropertiesType.Property createConfiguredPropertiesTypeProperty() {
		return new ConfiguredPropertiesType.Property();
	}

	/**
	 * Create an instance of {@link FilterDescriptorType }
	 * 
	 */
	public FilterDescriptorType createFilterDescriptorType() {
		return new FilterDescriptorType();
	}

	/**
	 * Create an instance of {@link AnalyzerDescriptorType }
	 * 
	 */
	public AnalyzerDescriptorType createAnalyzerDescriptorType() {
		return new AnalyzerDescriptorType();
	}

	/**
	 * Create an instance of {@link TransformerType }
	 * 
	 */
	public TransformerType createTransformerType() {
		return new TransformerType();
	}

	/**
	 * Create an instance of {@link OutputType }
	 * 
	 */
	public OutputType createOutputType() {
		return new OutputType();
	}

	/**
	 * Create an instance of {@link Job }
	 * 
	 */
	public Job createJob() {
		return new Job();
	}

	/**
	 * Create an instance of {@link MergedOutcomeType }
	 * 
	 */
	public MergedOutcomeType createMergedOutcomeType() {
		return new MergedOutcomeType();
	}

	/**
	 * Create an instance of {@link ConfiguredPropertiesType }
	 * 
	 */
	public ConfiguredPropertiesType createConfiguredPropertiesType() {
		return new ConfiguredPropertiesType();
	}

	/**
	 * Create an instance of {@link InputType }
	 * 
	 */
	public InputType createInputType() {
		return new InputType();
	}

	/**
	 * Create an instance of {@link ColumnsType }
	 * 
	 */
	public ColumnsType createColumnsType() {
		return new ColumnsType();
	}

	/**
	 * Create an instance of {@link AnalyzerType }
	 * 
	 */
	public AnalyzerType createAnalyzerType() {
		return new AnalyzerType();
	}

	/**
	 * Create an instance of {@link OutcomeType }
	 * 
	 */
	public OutcomeType createOutcomeType() {
		return new OutcomeType();
	}

	/**
	 * Create an instance of {@link TransformerDescriptorType }
	 * 
	 */
	public TransformerDescriptorType createTransformerDescriptorType() {
		return new TransformerDescriptorType();
	}

	/**
	 * Create an instance of {@link SourceType }
	 * 
	 */
	public SourceType createSourceType() {
		return new SourceType();
	}

	/**
	 * Create an instance of {@link FilterType }
	 * 
	 */
	public FilterType createFilterType() {
		return new FilterType();
	}

	/**
	 * Create an instance of {@link ColumnType }
	 * 
	 */
	public ColumnType createColumnType() {
		return new ColumnType();
	}

}
