//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.05 at 10:05:31 AM CET 
//


package org.eobjects.analyzer.configuration.jaxb;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.eobjects.analyzer.configuration.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.eobjects.analyzer.configuration.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ReferenceDataCatalogType.Dictionaries }
     * 
     */
    public ReferenceDataCatalogType.Dictionaries createReferenceDataCatalogTypeDictionaries() {
        return new ReferenceDataCatalogType.Dictionaries();
    }

    /**
     * Create an instance of {@link ExcelDatastoreType }
     * 
     */
    public ExcelDatastoreType createExcelDatastoreType() {
        return new ExcelDatastoreType();
    }

    /**
     * Create an instance of {@link ClasspathScannerType }
     * 
     */
    public ClasspathScannerType createClasspathScannerType() {
        return new ClasspathScannerType();
    }

    /**
     * Create an instance of {@link CompositeDatastoreType }
     * 
     */
    public CompositeDatastoreType createCompositeDatastoreType() {
        return new CompositeDatastoreType();
    }

    /**
     * Create an instance of {@link H2StorageProviderType }
     * 
     */
    public H2StorageProviderType createH2StorageProviderType() {
        return new H2StorageProviderType();
    }

    /**
     * Create an instance of {@link InMemoryStorageProviderType }
     * 
     */
    public InMemoryStorageProviderType createInMemoryStorageProviderType() {
        return new InMemoryStorageProviderType();
    }

    /**
     * Create an instance of {@link ReferenceDataCatalogType.SynonymCatalogs }
     * 
     */
    public ReferenceDataCatalogType.SynonymCatalogs createReferenceDataCatalogTypeSynonymCatalogs() {
        return new ReferenceDataCatalogType.SynonymCatalogs();
    }

    /**
     * Create an instance of {@link JdbcDatastoreType }
     * 
     */
    public JdbcDatastoreType createJdbcDatastoreType() {
        return new JdbcDatastoreType();
    }

    /**
     * Create an instance of {@link CustomElementType.Property }
     * 
     */
    public CustomElementType.Property createCustomElementTypeProperty() {
        return new CustomElementType.Property();
    }

    /**
     * Create an instance of {@link CustomElementType }
     * 
     */
    public CustomElementType createCustomElementType() {
        return new CustomElementType();
    }

    /**
     * Create an instance of {@link TextFileSynonymCatalogType }
     * 
     */
    public TextFileSynonymCatalogType createTextFileSynonymCatalogType() {
        return new TextFileSynonymCatalogType();
    }

    /**
     * Create an instance of {@link MultithreadedTaskrunnerType }
     * 
     */
    public MultithreadedTaskrunnerType createMultithreadedTaskrunnerType() {
        return new MultithreadedTaskrunnerType();
    }

    /**
     * Create an instance of {@link DbaseDatastoreType }
     * 
     */
    public DbaseDatastoreType createDbaseDatastoreType() {
        return new DbaseDatastoreType();
    }

    /**
     * Create an instance of {@link ValueListDictionaryType }
     * 
     */
    public ValueListDictionaryType createValueListDictionaryType() {
        return new ValueListDictionaryType();
    }

    /**
     * Create an instance of {@link Configuration }
     * 
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link ReferenceDataCatalogType }
     * 
     */
    public ReferenceDataCatalogType createReferenceDataCatalogType() {
        return new ReferenceDataCatalogType();
    }

    /**
     * Create an instance of {@link HsqldbStorageProviderType }
     * 
     */
    public HsqldbStorageProviderType createHsqldbStorageProviderType() {
        return new HsqldbStorageProviderType();
    }

    /**
     * Create an instance of {@link AccessDatastoreType }
     * 
     */
    public AccessDatastoreType createAccessDatastoreType() {
        return new AccessDatastoreType();
    }

    /**
     * Create an instance of {@link BerkeleyDbStorageProviderType }
     * 
     */
    public BerkeleyDbStorageProviderType createBerkeleyDbStorageProviderType() {
        return new BerkeleyDbStorageProviderType();
    }

    /**
     * Create an instance of {@link SinglethreadedTaskrunnerType }
     * 
     */
    public SinglethreadedTaskrunnerType createSinglethreadedTaskrunnerType() {
        return new SinglethreadedTaskrunnerType();
    }

    /**
     * Create an instance of {@link CsvDatastoreType }
     * 
     */
    public CsvDatastoreType createCsvDatastoreType() {
        return new CsvDatastoreType();
    }

    /**
     * Create an instance of {@link ClasspathScannerType.Package }
     * 
     */
    public ClasspathScannerType.Package createClasspathScannerTypePackage() {
        return new ClasspathScannerType.Package();
    }

    /**
     * Create an instance of {@link DatastoreCatalogType }
     * 
     */
    public DatastoreCatalogType createDatastoreCatalogType() {
        return new DatastoreCatalogType();
    }

    /**
     * Create an instance of {@link OpenOfficeDatabaseDatastoreType }
     * 
     */
    public OpenOfficeDatabaseDatastoreType createOpenOfficeDatabaseDatastoreType() {
        return new OpenOfficeDatabaseDatastoreType();
    }

    /**
     * Create an instance of {@link DatastoreDictionaryType }
     * 
     */
    public DatastoreDictionaryType createDatastoreDictionaryType() {
        return new DatastoreDictionaryType();
    }

    /**
     * Create an instance of {@link ConfigurationMetadataType }
     * 
     */
    public ConfigurationMetadataType createConfigurationMetadataType() {
        return new ConfigurationMetadataType();
    }

    /**
     * Create an instance of {@link TextFileDictionaryType }
     * 
     */
    public TextFileDictionaryType createTextFileDictionaryType() {
        return new TextFileDictionaryType();
    }

}
