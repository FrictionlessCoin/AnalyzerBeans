<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eobjects.analyzerbeans</groupId>
	<artifactId>AnalyzerBeans</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>AnalyzerBeans</name>
	<url>http.analyzerbeans.eobjects.org</url>
	<description>
		A framework for processing and analyzing data in a database, spreadsheet or other
		data source. AnalyzerBeans is widely based on a simple annotation-based development
		model where plugin/component development is very easy while it still supports reuse
		of business logic, configurability and super-fast execution.
	</description>
	<properties>
		<slf4j.version>1.6.1</slf4j.version>
		<metamodel.version>1.5-RC4</metamodel.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<developers>
		<developer>
			<name>Kasper SÃ¸rensen</name>
			<email>kasper@eobjects.dk</email>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Stefan Janssen</name>
			<email>stefan.janssen@humaninference.com</email>
		</contributor>
		<contributor>
			<name>Nancy Sharma</name>
			<email>nsharma@xebia.com</email>
		</contributor>
	</contributors>
	<parent>
		<!-- Uses the OSS sonatype nexus repository for distribution -->
		<!-- See https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide -->
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>5</version>
	</parent>
	<scm>
		<connection>
			scm:svn:http://eobjects.org/svn/AnalyzerBeans/trunk/
		</connection>
		<developerConnection>
			scm:svn:http://eobjects.org/svn/AnalyzerBeans/trunk/
		</developerConnection>
		<url>
			http://eobjects.org/svn/AnalyzerBeans/trunk/ 
		</url>
	</scm>
	<distributionManagement>
		<site>
			<id>analyzerbeans.eobjects.org</id>
			<name>AnalyzerBeans website</name>
			<url>scp://eobjects.org/var/www/analyzerbeans</url>
		</site>
	</distributionManagement>
	<issueManagement>
		<system>trac</system>
		<url>http://eobjects.org/trac</url>
	</issueManagement>
	<licenses>
		<license>
			<name>Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl.txt</url>
		</license>
	</licenses>
	<build>
		<finalName>AnalyzerBeans</finalName>
		<plugins>
			<plugin>
				<!-- Ensures java 6 compatibility -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>utf-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- make the jar file executable when dependencies are available in 
					lib/ folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<classpathPrefix>lib</classpathPrefix>
							<mainClass>org.eobjects.analyzer.cli.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- Makes source jar's available also (for repo deployment) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Copy dependencies to lib/ folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Releases new versions of MetaModel using release:prepare and release:perform -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<!-- Ensure inclusion of license header in all main java files -->
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<header>HEADER.txt</header>
					<includes>
						<include>src/**/java/**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>verify-license-headers</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<inherited>false</inherited>
					</execution>
				</executions>
			</plugin>
			<!-- Cobertura code coverage -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>org/eobjects/analyzer/**/jaxb/**/*.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
			<!-- Used for a lot of CI environments, version is needed -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.0-beta-1</version>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>doclet</artifactId>
						<version>5.1</version>
					</docletArtifact>
					<additionalparam>-views</additionalparam>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<effort>Max</effort>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus repository</id>
			<url>http://repository.codehaus.org/</url>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>repository.jboss.org</id>
			<name>JBoss Repository</name>
			<url>http://repository.jboss.org/maven2</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-full</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-jdbc</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-openoffice</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-dbase</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-csv</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-excel</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-access</artifactId>
			<version>${metamodel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-xml</artifactId>
			<version>${metamodel.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math</artifactId>
			<version>2.1</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- Used for classpath scanning. Required if the ClasspathScanDescriptorProvider 
			is used -->
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.2</version>
		</dependency>

		<!-- Needed if H2 StorageProvider is used -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.145</version>
		</dependency>

		<!-- Needed if MongoDB StorageProvider is used -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.3</version>
			<optional>true</optional>
		</dependency>

		<!-- Needed if BerkeleyDB StorageProvider is used -->
		<dependency>
			<groupId>berkeleydb</groupId>
			<artifactId>je</artifactId>
			<version>3.2.76</version>
			<optional>true</optional>
		</dependency>

		<!-- JSR 330: Dependency Injection -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Command line args parsing -->
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.0.12</version>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

		<!-- Needed if the EjbTimerTaskRunner is used -->
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>

		<!-- The MetaModel-testware module includes junit, easymock and some sampledata -->
		<dependency>
			<groupId>org.eobjects.metamodel</groupId>
			<artifactId>MetaModel-testware</artifactId>
			<version>${metamodel.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
